# Hash table for the condition parameters
$matchParams = @{
input          = '{REQUEST_URI}'
matchType      = 'Pattern'
pattern        = '.*autodiscover\.json.*\@.*Powershell.*'
ignoreCase     = 'true'
negate         = 'false'
}

Import-Module WebAdministration

# Get every site in IIS
$sites = (Get-Website).name | foreach {"iis:\sites\$_"}

# For each site, add blocking rule
foreach ($site in $sites){
Add-WebConfigurationProperty -pspath $site -filter "system.webserver/rewrite/rules" -name "." -value @{name='RequestBlockingRule1'; patternSyntax='ECMAScript'; stopProcessing='True'}
Set-WebConfigurationProperty -pspath $site -filter "system.webServer/rewrite/rules/rule[@name='RequestBlockingRule1']/action" -name type -value CustomResponse
Set-WebConfigurationProperty -pspath $site -filter "system.webServer/rewrite/rules/rule[@name='RequestBlockingRule1']/action" -name Redirect -value Permanent
Set-WebConfigurationProperty -pspath $site -filter "system.webServer/rewrite/rules/rule[@name='RequestBlockingRule1']/action" -name statusCode -value 403
Set-WebConfigurationProperty -pspath $site -filter "system.webServer/rewrite/rules/rule[@name='RequestBlockingRule1']/action" -name statusReason -value 'Forbidden: Access is denied'
Set-WebConfigurationProperty -pspath $site -filter "system.webserver/rewrite/rules/rule[@name='RequestBlockingRule1']/conditions" -name Collection -value $matchParams
}

# Block ports used for remote PowerShell
netsh advfirewall firewall add rule name="BlockRemotePSHttp" protocol=TCP dir=in localport=5985 action=block
netsh advfirewall firewall add rule name="BlockRemotePSHttps" protocol=TCP dir=in localport=5986 action=block
